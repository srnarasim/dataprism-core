name: Deploy to GitHub Pages

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  build:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout
      uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'

    - name: Install dependencies
      run: npm ci

    - name: Build Rust WASM core
      run: |
        # Install Rust and wasm-pack
        curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs | sh -s -- -y
        source ~/.cargo/env
        curl https://rustwasm.github.io/wasm-pack/installer/init.sh -sSf | sh
        
        # Build WASM module
        cd packages/src
        wasm-pack build --target web --out-dir ../pkg --release
        cd ../..

    - name: Build TypeScript packages
      run: |
        npm run build:orchestration
        npm run build:bundles

    - name: Run tests
      run: |
        npm run test:orchestration

    - name: Create deployment directory structure
      run: |
        mkdir -p gh-pages
        
        # Copy CDN bundles
        cp -r dist/bundles gh-pages/bundles
        
        # Copy WASM files
        mkdir -p gh-pages/wasm
        cp packages/pkg/*.wasm gh-pages/wasm/ || echo "No WASM files found"
        cp packages/pkg/*.js gh-pages/wasm/ || echo "No WASM JS files found"
        
        # Copy documentation
        cp -r docs gh-pages/docs
        
        # Copy examples
        cp -r examples gh-pages/examples
        
        # Create index.html for GitHub Pages
        cat > gh-pages/index.html << 'EOF'
        <!DOCTYPE html>
        <html lang="en">
        <head>
            <meta charset="UTF-8">
            <meta name="viewport" content="width=device-width, initial-scale=1.0">
            <title>DataPrism Core CDN</title>
            <style>
                body {
                    font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', sans-serif;
                    max-width: 1200px;
                    margin: 0 auto;
                    padding: 20px;
                    line-height: 1.6;
                }
                .grid {
                    display: grid;
                    grid-template-columns: repeat(auto-fit, minmax(300px, 1fr));
                    gap: 20px;
                    margin-top: 20px;
                }
                .card {
                    border: 1px solid #ddd;
                    border-radius: 8px;
                    padding: 20px;
                    background: #f9f9f9;
                }
                .card h3 {
                    margin-top: 0;
                    color: #007acc;
                }
                code {
                    background: #f5f5f5;
                    padding: 2px 4px;
                    border-radius: 3px;
                    font-family: Monaco, Consolas, monospace;
                }
                pre {
                    background: #f5f5f5;
                    padding: 15px;
                    border-radius: 5px;
                    overflow-x: auto;
                }
                a {
                    color: #007acc;
                    text-decoration: none;
                }
                a:hover {
                    text-decoration: underline;
                }
            </style>
        </head>
        <body>
            <h1>DataPrism Core CDN</h1>
            <p>Welcome to the DataPrism Core Content Delivery Network. This CDN provides optimized bundles for browser-based analytics with CORS-aware cloud storage integration.</p>
            
            <div class="grid">
                <div class="card">
                    <h3>CDN Bundles</h3>
                    <p>Pre-built, optimized bundles ready for production use:</p>
                    <ul>
                        <li><a href="bundles/dataprism-core.min.js">Full Bundle (ESM)</a></li>
                        <li><a href="bundles/dataprism-core.umd.js">Full Bundle (UMD)</a></li>
                        <li><a href="bundles/dataprism-core-lite.min.js">Lite Bundle (ESM)</a></li>
                        <li><a href="bundles/dataprism-core-lite.umd.js">Lite Bundle (UMD)</a></li>
                    </ul>
                </div>
                
                <div class="card">
                    <h3>WASM Modules</h3>
                    <p>WebAssembly modules for high-performance analytics:</p>
                    <ul>
                        <li><a href="wasm/">WASM Directory</a></li>
                    </ul>
                </div>
                
                <div class="card">
                    <h3>Documentation</h3>
                    <p>Comprehensive API documentation and guides:</p>
                    <ul>
                        <li><a href="docs/cloud-storage-api.md">Cloud Storage API</a></li>
                        <li><a href="docs/">All Documentation</a></li>
                    </ul>
                </div>
                
                <div class="card">
                    <h3>Examples</h3>
                    <p>Interactive demos and example implementations:</p>
                    <ul>
                        <li><a href="examples/cloud-storage-demo.html">Cloud Storage Demo</a></li>
                        <li><a href="examples/">All Examples</a></li>
                    </ul>
                </div>
            </div>
            
            <h2>Quick Start</h2>
            <p>Include DataPrism Core in your web application:</p>
            
            <h3>ESM (Modern Browsers)</h3>
            <pre><code>import { DataPrismEngine } from 'https://srnarasim.github.io/dataprism-core/bundles/dataprism-core.es.js';

const engine = new DataPrismEngine({
  corsConfig: { strategy: 'auto' },
  cloudProviders: {
    'aws-s3': { authMethod: 'api-key' }
  }
});

await engine.initialize();

// Register cloud table
await engine.duckdbCloudService?.registerCloudTable(
  'sales_data',
  'https://my-bucket.s3.amazonaws.com/sales.parquet'
);

// Query cloud data
const result = await engine.query(`
  SELECT region, SUM(revenue) as total_revenue
  FROM sales_data
  WHERE date >= '2024-01-01'
  GROUP BY region
`);</code></pre>

            <h3>UMD (Universal)</h3>
            <pre><code>&lt;script src="https://srnarasim.github.io/dataprism-core/bundles/dataprism-core.umd.js"&gt;&lt;/script&gt;
&lt;script&gt;
  const { DataPrismEngine } = DataPrismCore;
  
  const engine = new DataPrismEngine({
    corsConfig: { strategy: 'auto' }
  });
  
  engine.initialize().then(() => {
    console.log('DataPrism Engine ready!');
  });
&lt;/script&gt;</code></pre>

            <h2>Features</h2>
            <ul>
                <li><strong>CORS-Aware Cloud Storage</strong>: Seamless access to AWS S3, CloudFlare R2, Google Cloud Storage, and Azure Blob Storage with automatic proxy fallback</li>
                <li><strong>High-Performance Analytics</strong>: DuckDB-powered SQL analytics with WebAssembly optimizations</li>
                <li><strong>Intelligent Caching</strong>: Multi-tier caching system with LRU eviction and TTL management</li>
                <li><strong>Browser Optimized</strong>: Optimized bundles under 1MB with lazy loading and streaming support</li>
                <li><strong>TypeScript Ready</strong>: Full TypeScript support with comprehensive type definitions</li>
            </ul>

            <h2>Browser Compatibility</h2>
            <ul>
                <li>Chrome 90+</li>
                <li>Firefox 88+</li>
                <li>Safari 14+</li>
                <li>Edge 90+</li>
            </ul>

            <p><em>Last updated: <span id="timestamp"></span></em></p>
            <script>
                document.getElementById('timestamp').textContent = new Date().toISOString();
            </script>
        </body>
        </html>
        EOF

    - name: Setup Pages
      uses: actions/configure-pages@v4

    - name: Upload artifact
      uses: actions/upload-pages-artifact@v3
      with:
        path: './gh-pages'

  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    if: github.ref == 'refs/heads/main'
    
    steps:
    - name: Deploy to GitHub Pages
      id: deployment
      uses: actions/deploy-pages@v4