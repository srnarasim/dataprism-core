name: Deploy to GitHub Pages

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  build:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout
      uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'

    - name: Install dependencies
      run: npm ci

    - name: Build Rust WASM core
      run: |
        # Install Rust and wasm-pack
        curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs | sh -s -- -y
        source ~/.cargo/env
        curl https://rustwasm.github.io/wasm-pack/installer/init.sh -sSf | sh
        
        # Build WASM module
        cd packages/src
        wasm-pack build --target web --out-dir ../pkg --release
        cd ../..

    - name: Build TypeScript packages
      run: |
        npm run build:orchestration
        npm run build:bundles

    - name: Run tests
      run: |
        npm run test:orchestration

    - name: Create deployment directory structure
      run: |
        mkdir -p gh-pages
        
        # Copy CDN bundles to both bundles/ and root for compatibility
        cp -r dist/bundles gh-pages/bundles
        cp dist/bundles/* gh-pages/ || echo "No bundle files to copy to root"
        
        # Copy DuckDB configuration
        cp duckdb-config.json gh-pages/
        
        # Copy WASM files
        mkdir -p gh-pages/wasm
        cp packages/pkg/*.wasm gh-pages/wasm/ || echo "No WASM files found"
        cp packages/pkg/*.js gh-pages/wasm/ || echo "No WASM JS files found"
        
        # Copy documentation
        cp -r docs gh-pages/docs
        
        # Copy examples
        cp -r examples gh-pages/examples
        
        # Create simple index.html for GitHub Pages
        cat > gh-pages/index.html << 'PAGEEOF'
        <!DOCTYPE html>
        <html>
        <head>
            <title>DataPrism Core CDN</title>
            <style>
                body { font-family: system-ui, sans-serif; margin: 40px auto; max-width: 900px; padding: 0 20px; }
                .demo { text-align: center; background: #667eea; padding: 30px; border-radius: 10px; margin: 30px 0; }
                .demo a { display: inline-block; padding: 15px 30px; background: white; color: #667eea; text-decoration: none; border-radius: 8px; font-weight: bold; }
            </style>
        </head>
        <body>
            <h1>DataPrism Core CDN</h1>
            <p>High-performance WebAssembly analytics engine with cloud storage integration</p>
            
            <div class="demo">
                <a href="examples/cloud-storage-demo.html">Try Live Demo with NYC Taxi Data</a>
            </div>
            
            <h3>CDN Bundles</h3>
            <ul>
                <li><a href="bundles/dataprism-core.min.js">dataprism-core.min.js</a></li>
                <li><a href="bundles/dataprism-core.umd.js">dataprism-core.umd.js</a></li>
            </ul>
            
            <h3>Documentation</h3>
            <ul>
                <li><a href="docs/cloud-storage-usage.md">Cloud Storage Usage Guide</a></li>
                <li><a href="docs/">All Documentation</a></li>
            </ul>
            
            <h3>Examples</h3>
            <ul>
                <li><a href="examples/cloud-storage-demo.html">Cloud Storage Demo</a></li>
                <li><a href="examples/">All Examples</a></li>
            </ul>
        </body>
        </html>
        PAGEEOF

    - name: Setup Pages
      uses: actions/configure-pages@v4

    - name: Upload artifact
      uses: actions/upload-pages-artifact@v3
      with:
        path: './gh-pages'

  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    if: github.ref == 'refs/heads/main'
    
    steps:
    - name: Deploy to GitHub Pages
      id: deployment
      uses: actions/deploy-pages@v4